<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customControl="clr-namespace:Client.CustomControl"
    xmlns:converter="clr-namespace:Client.Converter"
    xmlns:myLibrary="clr-namespace:MyLibrary;assembly=MyLibrary">

    <Style TargetType="{x:Type customControl:AutoSendMessagesControl}">
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControl:AutoSendMessagesControl}">
                    <ControlTemplate.Resources>
                        <converter:InvertableBooleanToVisibilityConverter x:Key="InvertableBooleanToVisibilityConverter" />
                        <converter:InvertBoolConverter x:Key="InvertBoolConverter"/>
                    </ControlTemplate.Resources>
                    
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Vertical">
                            <Label Content="Interval Message Sending" HorizontalAlignment="Center"/>

                            <StackPanel Orientation="Horizontal">
                                <StackPanel Orientation="Vertical">
                                    <Button Content="Start Sending" Command="{TemplateBinding ButtonClickedCommand}" Width="{TemplateBinding StartButtonWidth}" Visibility="{TemplateBinding Sending, Converter={StaticResource InvertableBooleanToVisibilityConverter}, ConverterParameter=Inverted}" />
                                    <Button Content="Stop Sending" Command="{TemplateBinding ButtonClickedCommand}" Width="{TemplateBinding StopButtonWidth}" Visibility="{TemplateBinding Sending, Converter={StaticResource InvertableBooleanToVisibilityConverter}}" />
                                </StackPanel>

                                <StackPanel Orientation="Vertical">
                                    <StackPanel Orientation="Horizontal">
                                        <Label Content="Interval: " IsEnabled="{TemplateBinding Sending, Converter={StaticResource InvertBoolConverter}}"/>
                                        <myLibrary:NumericUpDown Value="{TemplateBinding NumericValue}" IsEnabled="{TemplateBinding Sending, Converter={StaticResource InvertBoolConverter}}"/>
                                        <Label Content="Seconds" IsEnabled="{TemplateBinding Sending, Converter={StaticResource InvertBoolConverter}}"/>
                                    </StackPanel>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type customControl:SendMessageControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControl:SendMessageControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                        <StackPanel Orientation="Horizontal">
                            <Button Content="Send" Margin="5" Command="{TemplateBinding SendCommand}"/>
                            <TextBox Margin="5" Width="100" Text="{Binding SingleMessageText, UpdateSourceTrigger=PropertyChanged}"/>
                            <CheckBox Margin="5" IsChecked="{Binding AddNumberToSingleMessage, UpdateSourceTrigger=PropertyChanged}"/>
                            <Label Content="Add Message Number" Margin="0,5,5,5"/>
                        </StackPanel>
                        
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
